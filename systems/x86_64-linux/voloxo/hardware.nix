# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "nvidia" ];
  boot.kernelModules = [ "kvm-amd" "sg" ];
  boot.extraModulePackages = [ config.boot.kernelPackages.nvidia_x11 ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f1abb1b8-0cc5-46f3-9e97-72f793c4b496";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-07910f1e-c989-4acc-8d81-fef02a2596b3".device = "/dev/disk/by-uuid/07910f1e-c989-4acc-8d81-fef02a2596b3";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/1ECE-940A";
      fsType = "vfat";
    };

  swapDevices = [{ device = "/swapfile"; size = 8 * 1024; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.nvidia.package = config.boot.kernelPackages.nvidiaPackages.stable;
  hardware.nvidia.open = false;
  hardware.openrazer = {
    enable = true;
    users = [ "kb" ];
  };
}
